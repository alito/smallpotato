#ifndef __cmdline__
#define __cmdline__
/*****
  command line parser interface -- generated by clig 
  (http://wsd.iitb.fhg.de/~kir/clighome/)

  The command line parser `clig':
  (C) 1995---2001 Harald Kirsch (kirschh@lionbioscience.com)
*****/

typedef struct s_Cmdline {
  /***** -help: show usage information */
  char show_helpP;
  /***** -V: show program version */
  char show_versionP;
  /***** -random: play random moves */
  char randomP;
  /***** -complete: play full negamax */
  char completeP;
  /***** -onestep: play with depth of one */
  char onestepP;
  /***** -multistep: play with fixed depth alpha-beta cutoff algorithm */
  char multistepP;
  /***** -negascout: play with iterative deepening negascout algorithm (default) */
  char negascoutP;
  /***** -fixed: evaluate board by fixed piece values */
  char fixedevalP;
  /***** -relative: evaluate board by relative proportion to opponent */
  char relativeevalP;
  /***** -record: record game */
  char recordP;
  /***** -position: evaluate board by piece values relative to position */
  char positionevalP;
  /***** -nobook: do not use opening book */
  char nobookP;
  /***** -noresign: never resign */
  char noresignP;
  /***** -norecord: do not record the game */
  char norecordP;
  /***** -log: file where to write all spurious output messages */
  char logfileP;
  char* logfile;
  int logfileC;
  /***** -gamefile: file where to record the games */
  char gamefileP;
  char* gamefile;
  int gamefileC;
  /***** -values: file specifying pieces values */
  char valuefileP;
  char* valuefile;
  int valuefileC;
  /***** -config: configuration file - default is sp.rc, or sp.ini  */
  char configfileP;
  char* configfile;
  int configfileC;
  /***** -compname: name to report for the engine  */
  char computernameP;
  char* computername;
  int computernameC;
  /***** -book: opening book file */
  char bookfileP;
  char* bookfile;
  int bookfileC;
  /***** -guiveup: Pawn values deficit at which to resign (default is 6.5, will be ignored if combined with -relative)  */
  char resignP;
  float resign;
  int resignC;
  /***** -d: maximum depth of search */
  char dP;
  int d;
  int dC;
  /***** -r: randomness introduced into the evaluation algorithm as a percentage of a pawn's value */
  char randomvarianceP;
  int randomvariance;
  int randomvarianceC;
  /***** -hs: number of entries in hash table (will be deprecated) */
  char hashsizeP;
  int hashsize;
  int hashsizeC;
  /***** -hk: hash table size in kilobytes */
  char hashkilobytesP;
  int hashkilobytes;
  int hashkilobytesC;
  /***** -mindepth: minimum depth at which an epd can be considered solved */
  char epdmindepthP;
  int epdmindepth;
  int epdmindepthC;
  /***** -draw: value, in hundredth of a pawn, of a draw */
  char drawvalueP;
  int drawvalue;
  int drawvalueC;
  /***** -v: verbosity level */
  char verboseP;
  int verbose;
  int verboseC;
  /***** uninterpreted command line parameters */
  int argc;
  /*@null*/char **argv;
  /***** the whole command line concatenated */
  char *tool;
} Cmdline;


extern char *Program;
extern void usage(void);
extern /*@shared*/Cmdline *parseCmdline(int argc, char **argv);

#endif

